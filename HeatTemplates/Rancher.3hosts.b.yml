heat_template_version: 2013-05-23
# Author: Miguel Angel Diego Alfageme
# Date: 05/09/2017
# Purpose: Deploy VM resources a Docker host
# on Fujitsu's Cloud Service K5 IaaS Platform
#
#
description: Deploy 3 Hosts from Snapshot with Docker & Rancher Agent

# Input parameters
parameters:
  name_preffix:
    type: string
    label: Name preffix
    description: Name preffix used to concat to all the resources (unique for K5 project)
    default: "cnets_rancher_host"
  snapshot_id:
    type: string
    label: Snapshot Id
    description: Snapshot to be used for compute instance
    default: "43e26062-df4b-48e5-8ba0-79e8cdac7c92"
  k5_ubuntu_image:
    type: string
    label: Image name or ID
    description: Image to be used for compute instance
    default: "Ubuntu Server 16.04 LTS (English) 01"
  flavor:
    type: string
    label: Flavor
    description: Type of instance (flavor) to be used
    default: "C-1"
  key_pair:
    type: string
    label: Key name
    description: Name of key-pair to be used for compute instance
    default: "cnets_rancher"
  private_net:
    type: string
    label: private network id
    description: id of private network 
    default: "4a03178c-4cd1-4b44-ab6f-c8d9459b0ab2"
  security_group:
    type: string
    label: security group
    description: security group 
    default: "cnets_rancher-access"    
  az:
    type: string
    label: Availability Zone
    description: Region AZ to use
    default: "de-1a"
  disk_size:
    type: number
    label: Disk Size
    description: Block Storage Disk Size in GB
    default: 20    
  rancher_url:
    type: string
    label: Rancher Server URL
    description: Rancher Server URL
    default: "http://10.0.10.3:8080/v1/scripts/CB8E6E28E890479B0265:1483142400000:5CJCwRMhIErxDOnGdZz2SgXy9A"

# K5 Infrastructure resources to be built
resources:
  # -------------------------------------------------------------------------
  
  host1_port:
    type: OS::Neutron::Port
    properties:
      availability_zone: { get_param: az }
      network: { get_param: private_net }
      security_groups:
        - { get_param: security_group }
  
  host1_sys_vol:
    type: OS::Cinder::Volume
    properties:
      availability_zone: { get_param: az }
      name:
        str_replace:
          template: "$name_preffix_box_1"
          params:
            "$name_preffix": { get_param: name_preffix } 
      size: { get_param: disk_size }
      volume_type: "M1"
      snapshot_id : { get_param: snapshot_id }

# Build a docker server using the system volume defined above
  host1_server:
    type: OS::Nova::Server
    depends_on: [ host1_port, host1_sys_vol ]
    properties:
      availability_zone: { get_param: az }
      name:
        str_replace:
          template: "$name_preffix_1"
          params:
            "$name_preffix": { get_param: name_preffix } 
      key_name: { get_param: key_pair }
      flavor: { get_param: flavor }
      admin_user: ubuntu
      image : { get_param: k5_ubuntu_image }
      metadata: { "fcx.autofailover": True }
      block_device_mapping: [{"volume_size": { get_param: disk_size }, "volume_id": { get_resource: host1_sys_vol }, "delete_on_termination": True, "device_name": "/dev/vda"}]
      networks:
        - port: { get_resource: host1_port }
      user_data_format: RAW
      user_data:
        str_replace:
          template: |
            #cloud-config
            write_files:
            apt_update: true
            runcmd:
              # Config hostname resolution
              - echo $app_ip `hostname` >> /etc/hosts
              # Allocate in Rancher Server
              - sudo docker run -e CATTLE_AGENT_IP="$app_ip" -e CATTLE_HOST_LABELS='region=$az' --rm --privileged -v /var/run/docker.sock:/var/run/docker.sock -v /var/lib/rancher:/var/lib/rancher rancher/agent:v1.2.6 $rancher_url
              
          params:
            $app_ip: { get_attr: [host1_port, fixed_ips, 0, ip_address]}
            $rancher_url: { get_param: rancher_url }
            $az: { get_param: az }
            message: "Installation of Rancher Host Complete"
# ----------------------------------------------------------------------------------

 # -------------------------------------------------------------------------
  
  host2_port:
    type: OS::Neutron::Port
    properties:
      availability_zone: { get_param: az }
      network: { get_param: private_net }
      security_groups:
        - { get_param: security_group }
  
  host2_sys_vol:
    type: OS::Cinder::Volume
    properties:
      availability_zone: { get_param: az }
      name:
        str_replace:
          template: "$name_preffix_box_2"
          params:
            "$name_preffix": { get_param: name_preffix } 
      size: { get_param: disk_size }
      volume_type: "M1"
      snapshot_id : { get_param: snapshot_id }

# Build a docker server using the system volume defined above
  host2_server:
    type: OS::Nova::Server
    depends_on: [ host2_port, host2_sys_vol ]
    properties:
      availability_zone: { get_param: az }
      name:
        str_replace:
          template: "$name_preffix_2"
          params:
            "$name_preffix": { get_param: name_preffix } 
      key_name: { get_param: key_pair }
      flavor: { get_param: flavor }
      admin_user: ubuntu
      image : { get_param: k5_ubuntu_image }
      metadata: { "fcx.autofailover": True }
      block_device_mapping: [{"volume_size": { get_param: disk_size }, "volume_id": { get_resource: host2_sys_vol }, "delete_on_termination": True, "device_name": "/dev/vda"}]
      networks:
        - port: { get_resource: host2_port }
      user_data_format: RAW
      user_data:
        str_replace:
          template: |
            #cloud-config
            write_files:
            apt_update: true
            runcmd:
              # Config hostname resolution
              - echo $app_ip `hostname` >> /etc/hosts
              # Allocate in Rancher Server
              - sudo docker run -e CATTLE_AGENT_IP="$app_ip" -e CATTLE_HOST_LABELS='region=$az' --rm --privileged -v /var/run/docker.sock:/var/run/docker.sock -v /var/lib/rancher:/var/lib/rancher rancher/agent:v1.2.6 $rancher_url
              
          params:
            $app_ip: { get_attr: [host2_port, fixed_ips, 0, ip_address]}
            $rancher_url: { get_param: rancher_url }
            $az: { get_param: az }
            message: "Installation of Rancher Host Complete"
# ----------------------------------------------------------------------------------

 # -------------------------------------------------------------------------
  
  host3_port:
    type: OS::Neutron::Port
    properties:
      availability_zone: { get_param: az }
      network: { get_param: private_net }
      security_groups:
        - { get_param: security_group }
  
  host3_sys_vol:
    type: OS::Cinder::Volume
    properties:
      availability_zone: { get_param: az }
      name:
        str_replace:
          template: "$name_preffix_box_3"
          params:
            "$name_preffix": { get_param: name_preffix } 
      size: { get_param: disk_size }
      volume_type: "M1"
      snapshot_id : { get_param: snapshot_id }

# Build a docker server using the system volume defined above
  host3_server:
    type: OS::Nova::Server
    depends_on: [ host3_port, host3_sys_vol ]
    properties:
      availability_zone: { get_param: az }
      name:
        str_replace:
          template: "$name_preffix_3"
          params:
            "$name_preffix": { get_param: name_preffix } 
      key_name: { get_param: key_pair }
      flavor: { get_param: flavor }
      admin_user: ubuntu
      image : { get_param: k5_ubuntu_image }
      metadata: { "fcx.autofailover": True }
      block_device_mapping: [{"volume_size": { get_param: disk_size }, "volume_id": { get_resource: host3_sys_vol }, "delete_on_termination": True, "device_name": "/dev/vda"}]
      networks:
        - port: { get_resource: host3_port }
      user_data_format: RAW
      user_data:
        str_replace:
          template: |
            #cloud-config
            write_files:
            apt_update: true
            runcmd:
              # Config hostname resolution
              - echo $app_ip `hostname` >> /etc/hosts
              # Allocate in Rancher Server
              - sudo docker run -e CATTLE_AGENT_IP="$app_ip" -e CATTLE_HOST_LABELS='region=$az' --rm --privileged -v /var/run/docker.sock:/var/run/docker.sock -v /var/lib/rancher:/var/lib/rancher rancher/agent:v1.2.6 $rancher_url
              
          params:
            $app_ip: { get_attr: [host3_port, fixed_ips, 0, ip_address]}
            $rancher_url: { get_param: rancher_url }
            $az: { get_param: az }
            message: "Installation of Rancher Host Complete"
# ----------------------------------------------------------------------------------