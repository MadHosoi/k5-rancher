heat_template_version: 2013-05-23
# Author: Miguel Angel Diego Alfageme
# Date: 05/09/2017
# Purpose: Deploy VM resources a Docker host
# on Fujitsu's Cloud Service K5 IaaS Platform
#
#
description: Deploy 3 Hosts from Snapshot with Docker & Rancher Agent

# Input parameters
parameters:
  name_preffix:
    type: string
    label: Name preffix
    description: Name preffix used to concat to all the resources (unique for K5 project)
    default: "cnets-rancher-host2"
  k5_ubuntu_image:
    type: string
    label: Image name or ID
    description: Image to be used for compute instance
    default: "Ubuntu Server 16.04 LTS (English) 01"
  flavor:
    type: string
    label: Flavor
    description: Type of instance (flavor) to be used
    default: "C-1"
  key_pair:
    type: string
    label: Key name
    description: Name of key-pair to be used for compute instance
    default: "cnets-mdiego"
  private_net:
    type: string
    label: private network id
    description: id of private network 
    default: "e67f48b2-28fd-4ec1-b40a-3ccbc5280398"
  security_group:
    type: string
    label: security group
    description: security group 
    default: "cnets-rancher-access"    
  az:
    type: string
    label: Availability Zone
    description: Region AZ to use
    default: "uk-1a"
  rancher_server:
    type: string
    label: Rancher Server IP
    description: Rancher Server IP
    default: "10.0.10.3"

# K5 Infrastructure resources to be built
resources:
  # -------------------------------------------------------------------------
  # Create a system volume for use with the server
  server_port:
    type: OS::Neutron::Port
    properties:
      availability_zone: { get_param: az }
      network: { get_param: private_net }
      security_groups:
        - { get_param: security_group }

  rancherserver_sys_vol:
    type: OS::Cinder::Volume
    properties:
      availability_zone: { get_param: az }
      name:
        str_replace:
          template: "$name_preffix-box"
          params:
            "$name_preffix": { get_param: name_preffix } 
      size: 40
      volume_type: "M1"
      image : { get_param: k5_ubuntu_image }

# Build a docker server using the system volume defined above
  rancherserver_server:
    type: OS::Nova::Server
    depends_on: [ server_port, rancherserver_sys_vol ]
    properties:
      availability_zone: { get_param: az }
      name:
        str_replace:
          template: "$name_preffix"
          params:
            "$name_preffix": { get_param: name_preffix } 
      key_name: { get_param: key_pair }
      flavor: { get_param: flavor }
      admin_user: ubuntu
      image : { get_param: k5_ubuntu_image }
      metadata: { "fcx.autofailover": True }
      block_device_mapping: [{"volume_size": "40", "volume_id": { get_resource: rancherserver_sys_vol }, "delete_on_termination": True, "device_name": "/dev/vda"}]
      networks:
        - port: { get_resource: server_port }
      user_data_format: RAW
      user_data:
        str_replace:
          template: |
            #cloud-config
            write_files:
            apt_update: true
            runcmd:
              # Config hostname resolution
              - echo $app_ip `hostname` >> /etc/hosts
              # Install Docker
              - curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo apt-key add -
              - sudo add-apt-repository "deb [arch=amd64] https://download.docker.com/linux/ubuntu $(lsb_release -cs) stable"
              - sudo apt-get update
              - apt-cache policy docker-ce
              - sudo apt-get install -y docker-ce
              - sleep 90
              - sudo usermod -aG docker ubuntu
              - sudo docker run -e CATTLE_AGENT_IP="$app_ip"  -e CATTLE_HOST_LABELS='region=$az'  --rm --privileged -v /var/run/docker.sock:/var/run/docker.sock -v /var/lib/rancher:/var/lib/rancher rancher/agent:v1.2.6 http://$server_ip:8080/v1/scripts/A9305DC2F6C804E5A934:1483142400000:IxjJ51lxGOkGxvDPeSxtPNeujM
          params:
            $app_ip: { get_attr: [server_port, fixed_ips, 0, ip_address]}
            $server_ip: { get_param: rancher_server }
            $az: { get_param: az }
            message: "Installation of Rancher Host Complete"
# ----------------------------------------------------------------------------------